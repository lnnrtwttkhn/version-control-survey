referrer:
  type: referrer
  name: last_outside_referrer
browser:
  type: browser
  name: browser
intro_note:
  class: |
    label_align_left
    answer_below_label
  type: mc_multiple
  name: intro_note
  label: |
    ## Welcome!
    This survey is part of the course ["Version Control of Code and Data"](https://lennartwittkuhn.com/version-control-course-uhh-ss24/) at the University of Hamburg.
    Please spend a few minutes answering the following questions about the course and course contents.
    Your answers will help us to make this course better for you and the other participants.
    If you have any questions about the survey or if there is a problem, please contact [Dr. Lennart Wittkuhn](mailto:lennart.wittkuhn@uni-hamburg.de).
  choice1: "Show information on anonymity and data usage"
anonymity_note:
  type: note
  name: anonymity_note
  label: |
    #### Anonymity and data usage
    All answers are kept anonymous.
    The recording and evaluation of your responses are conducted anonymously in the research group "Mechanisms of Learning & Change" at the University of Hamburg.
    A personal codeword is used (see below) which you create following a specific rule. No one else will have access to it except you.
    The data will be used exclusively for educational purposes as part of the course  ["Version Control of Code and Data"](https://lennartwittkuhn.com/version-control-course-uhh-ss24/) at the University of Hamburg.
    If responses are shared as part of the course, they will be aggregated to ensure anonymity is maintained.
    If you want your data to be deleted, send an email with your codeword to [sekretariat-luv.psych@uni-hamburg.de](mailto:sekretariat-luv.psych@uni-hamburg.de).
  showif: intro_note == 1
codeword_note:
  class: |
    label_align_left
  type: note
  name: codeword_note
  label: |
    ### Codeword
codeword_course:
  type: text 8
  class: label_align_left
  name: codeword_course
  label: |
    **Please enter the course codeword:** 
    (If you participate in the course "Version Control of Code and Data" at the University of Hamburg. If not, leave blank.)
  optional: "*"
codeword:
  type: text 8
  class: label_align_left
  name: codeword
  label: |
    **Please enter your personal codeword:**
  optional: "*"
codeword_check:
  class: |
    label_align_left
  type: mc_multiple
  name: codeword_check
  choice1: "Show codeword instructions"
codeword_instructions:
  type: note
  name: codeword_instructions
  label: "Instructions missing!"
  showif: codeword_check == 1
next_page_1:
  type: submit
  name: next_page_1
  label: Continue
note_start:
  class: label_align_left
  type: note
  name: Note_start
  label: |
   ## Git basics exercises
   This survey will be about the [First steps with Git chapter](https://lennartwittkuhn.com/version-control-book/chapters/first-steps-git.html) from the book ["Version Control of Code and Data"](https://lennartwittkuhn.com/version-control-book/).
   ### Single choice questions:
mc_1:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_1
  label: |
    What command is used to create a new folder?
  choice1: "mkdir"
  choice2: "touch"
  choice3: "cd"
  choice4: "git init"
mc_2:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_2
  label: |
    After creating the "recipes" folder, what is the next step to initialize it as a Git repository?
  choice1: "git start"
  choice2: "git create"
  choice3: "git init"
  choice4: "git new"
mc_3:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_3
  label: |
   What command is used to stage changes for committing in Git?
  choice1: "git push"
  choice2: "git stage"
  choice3: "git commit"
  choice4: "git add"
mc_4:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_4
  label: |
   When committing changes in Git, what should you include along with your changes?
  choice1: "A commit message describing the changes"
  choice2: "A recipe for your favorite dish"
  choice3: "A list of Git contributors"
  choice4: "Your personal contact information"
mc_5:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_5
  label: |
   What is the purpose of a .gitignore file?
  choice1: "To store your Git commit messages"
  choice2: "To specify which files or patterns should be excluded from version control"
  choice3: "To track changes in your project"
  choice4: "To list all the contributors to a Git repository"
mc_6:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_6
  label: |
    Which command is used to create a .gitignore file?
  choice1: "git exclude"
  choice2: "git ignore"
  choice3: "touch .gitignore"
  choice4: "create .gitignore"
mc_7:
  type: mc_button
  class: |
    answer_below_label
    mc_vertical
  name: mc_7
  label: |
    What should you include in a .gitignore file if you want to exclude all files with the ".log" extension from being tracked by Git?
  choice1: ".log"
  choice2: "*.log"
  choice3: "exclude .log"
  choice4: "ignore *.log"
next_page_2:
  type: submit
  name: next_page_2
  label: Continue   
note_free_text:
  class: label_align_left
  type: note
  name: note_free_text
  label: |
   ## Git basics exercises
   ### Free Text Questions:
text_1:
  type: text
  class: |
    answer_below_label
  name: text_1
  label: |
    Write a good commit message for adding a new receipe into a file.
  optional: "*"
text_2:
  type: text
  class: |
    answer_below_label
  name: text_2
  label: |
    Write a good commit message for fixing an error in your recipe.
  optional: "*"
next_page_3:
  type: submit
  name: next_page_3
  label: End quiz and see feedback
feedback: 
  type: note
  class: |
    label_align_left
  name: feedback
  label: |
    ## Git basics exercises
    ### Feedback
    #### Single choice questions
  
    *What command is used to create a new folder?*
    **Your answer:** 
    `r if(mc_1 == 1) "mkdir" else if(mc_1 == 2) "touch" else if(mc_1 == 3) "cd" else if(mc_1 == 4) "git init" else "Your answer here"` 
    **Right answer:** 
    mkdir
    
    *After creating the "recipes" folder, what is the next step to initialize it as a Git repository?*
    **Your answer:**
    `r if(mc_2 == 1) "git start" else if(mc_2 == 2) "git create" else if(mc_2 == 3) "git init" else if(mc_2 == 4) "git new" else "Your answer here"` 
    **Right answer:**
    git init
    
    *What command is used to stage changes for committing in Git?*
    **Your answer:**
    `r if(mc_3 == 1) "git push" else if(mc_3 == 2) "git stage" else if(mc_3 == 3) "git commit" else if(mc_3 == 4) "git add" else "Your answer here"` 
    **Right answer**: 
    git add
    
    *When committing changes in Git, what should you include along with your changes?*
    **Your answer:**
    `r if(mc_4 == 1) "A commit message describing the changes" else if(mc_4 == 2) "A recipe for your favorite dish" else if(mc_4 == 3) "A list of Git contributors" else if(mc_4 == 4) "Your personal contact information" else "Your answer here"` 
    **Right answer:**
    A commit message describing the changes
    
    *What is the purpose of a `.gitignore` file?*
    **Your answer:**
    `r if(mc_5 == 1) "To store your Git commit messages" else if(mc_5 == 2) "To specify which files or patterns should be excluded from version control" else if(mc_5 == 3) "To track changes in your project" else if(mc_5 == 4) "To list all the contributors to a Git repository" else "Your answer here"` 
    **Right answer:**
    To specify which files or patterns should be excluded from version control
    
    *Which command is used to create a `.gitignore` file?*
    **Your answer:**
    `r if(mc_6 == 1) "git exclude" else if(mc_6 == 2) "git ignore" else if(mc_6 == 3) "touch .gitignore" else if(mc_6 == 4) "create .gitignore" else "Your answer here"` 
    **Right answer:**
    `touch .gitignore`
    
    *What should you include in a .gitignore file if you want to exclude all files with the ".log" extension from being tracked by Git?*
    **Your answer:**
    `r if(mc_7 == 1) ".log" else if(mc_7 == 2) "*.log" else if(mc_7 == 3) "exclude .log" else if(mc_7 == 4) "ignore *.log" else "Your answer here"` 
    **Right answer:**
    *.log
    
    #### Open questions
    *Write a good commit message for adding a new recipe into a file.*
    **Your answer:**
    `r text_1`  
    **Sample answer:**  
    e.g.: "Add new recipe: [Recipe Name]"
    
    *Write a good commit message for fixing an error in your recipe.*
    **Your answer:**
    `r text_2`  
    **Sample answer:** 
    e.g.: "Fix error in [Recipe Name]: [Brief Description]"
next_page_4:
  type: submit
  name: next_page_4
  label: |
    Close feedback

